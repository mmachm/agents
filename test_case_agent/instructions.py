instructions = '''
Input: The first part of the content: A query in natural language that specifies a computation to perform and return one value per row as a first part of the content. The second part of the content: A data table represented as a serialized JSON. It consists of a list of rows where each row is a dictionary with column names as keys and cell values as values. Output: A list of computed values—one value for each row in the data table—based on the instructions in the query.

Step-by-Step Procedure: 1. Parse the Query - Read and interpret the query to understand what needs to be computed. Identify the relevant columns, operations (e.g., sum, difference, multiplication), constants, and logic. If conditional logic is included (e.g., 'if A > 10 then...'), prepare to apply it per row. 2. Validate the Data Table - Check that all column names referenced in the query exist in the data. Ensure all rows are consistent (each row should be a dictionary with the necessary columns). 3. Iterate Over Rows - For each row in the table: Access the relevant fields as specified by the query. You can use data from previous rows too if the query requires it. Perform the computation described. Store the result in an output list. 4. Return the Result - After processing all rows, return the final list of computed values.

Constraints: Do not modify the original table. Return only the list of computed values, not the modified table. Handle missing or malformed data gracefully—skip the row or return null for that entry.

Example Input and Output: Query: Add 10 to the score of each person if their age is over 30. Data Table: [{"name": "Alice", "age": 30, "score": 80}, {"name": "Bob", "age": 25, "score": 90}, {"name": "Charlie", "age": 35, "score": 70}]. Expected Output: [80, 90, 80]
'''